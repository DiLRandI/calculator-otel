worker_processes  1;

events {
    worker_connections  4096;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  60s;

    # Upstream block for calculator server load balancing
    upstream calculator_backend {
        least_conn;  # Load balancing method: least connections
        server calculator-server-1:8080 max_fails=3 fail_timeout=60s;
        server calculator-server-2:8080 max_fails=3 fail_timeout=60s;
        server calculator-server-3:8080 max_fails=3 fail_timeout=60s;
    }

    # Log format that includes trace context and upstream info
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$http_traceparent" "$http_tracestate" '
                      'upstream: $upstream_addr upstream_time: $upstream_response_time';

    server {
        listen       80;
        server_name  localhost;

        access_log  /var/log/nginx/access.log  main;

        location / {
            proxy_pass http://calculator_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Propagate OpenTelemetry trace context headers
            proxy_set_header traceparent $http_traceparent;
            proxy_set_header tracestate $http_tracestate;
            
            # Connection and timeout settings for load balancing
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Health check endpoint (optional)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}